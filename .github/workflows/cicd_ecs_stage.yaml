name: Deploy to Amazon ECS

on:
  push:
    branches:
      - 'none'

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: XXXXXXXXX..dkr.ecr.eu-north-1.amazonaws.com/nahuel-challenge
  ECS_SERVICE: invo_service
  ECS_CLUSTER: hostaway-stage
  ECS_TASK_DEFINITION: /infrastructure/eu-north-1/stage/service/invo_service.json
  CONTAINER_NAME: main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: stage

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: "https://github.com/asemhostaway/invo.git#master:docker/8.1"
          push: true
          tags: XXXXXXXXX..dkr.ecr.eu-north-1.amazonaws.com/invo-sevice:${{ github.run_id }}


      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.2.0
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.imageid }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.2.0
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true